# GO语言环境关于IDE的配置 
    1.IDE需要的功能 
         IntelliSense
         code navigation
         code editing 
         diagnostics
         testing and debugging your programs
    
    2.插件安装 
        go install -v honnef.co/go/tools/cmd/staticcheck@latest
        go install -v honnef.co/go/tools/cmd/staticcheck@2020.2.1
        参考资料：https://staticcheck.io/docs/checks (检查内容)
#### <span style="color:SlateBlue ">2.staticcheck的优势?</span>

```
    1.它很负责,超过150次的检查确保您的代码处于最佳状态。
    2.Staticcheck can easily be integrated with your code review and CI systems, 
        preventing buggy code from ever getting committed.
        --可以集成到ci之中去,作为自动化code review的一部分.
    3.Staticcheck 是大多数主要编辑器的一部分，
        它已经与 gopls 集成在一起，发现 bug 并提供自动修复。
    --配合gopls,有bug提醒并修复的作用.
   
```
#### <span style="color:SlateBlue ">3.staticcheck命令参数?</span>

```
文档不多,说明和简单.
    Usage: staticcheck [flags] [packages]
        lags:
         -checks checks	Comma-separated list of checks to enable. (default "inherit")
         [要检查的内容]  --核心
         -explain check	Print description of check
         [告诉我们静态检查的结果] --核心
         -f format  Output format (valid choices are 'stylish', 'text' and 'json') (default text)
         [静态检查结果的输出文本格式]
         -fail checks	Comma-separated list of checks that can cause a non-zero exit status. (default "all")
        [失败结果检出] --核心
         -go version  Target Go version in the format '1.x', or the literal 'module' to use the module's Go version (default "module")

         -list-checks  List all available checks
        [检查列表]
         -matrix   Read a build config matrix from stdin

         -merge    Merge results of multiple Staticcheck runs

         -show-ignored Don't filter ign ored diagnostics
    
         -tags build tags  List of build tags

         -tests Include tests (default true)

         -version Print version and exit
