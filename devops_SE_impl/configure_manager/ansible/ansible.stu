    ansible 不用明白原理，玩出花，也就是一个效率工具。
        2022/8/15 16：55
        1.先搞三台虚拟机出来。 (拷贝了三台kali， 17:05)
        2.先让第一台机器安装ansible
            192.168.1.9 ->安装ansible(下载的巨满，换了源也没有用，cdn就开头加速了一段，cnm的运营商。17：19)
            192.168.1.11
            192.168.1.12

        /usr/bin/ansible 主程序，临时命令执行工具
        /usr/bin/ansible-doc 查看配置文档，模块功能查看工具
        /usr/bin/ansible-galaxy 下载/上传优秀代码或Roles模块的官网平台
        /usr/bin/ansible-playbook 定制自动化任务，编排剧本工具
        /usr/bin/ansible-pull 远程执行命令的工具
        /usr/bin/ansible-vault 文件加密工具
        /usr/bin/ansible-console 基于Console界面与用户交互的执行工具
        
        配置 ansible.cfg 
        ssh-keygen 生成密钥
        ssh-copy-id  kali@192.168.1.11 拷贝密钥到工作节点
        ssh-keyscan centos7-02 >> ~/.ssh/known_hosts
        --做完这几步ansible就能用了。
          查看分组：
        ansible xx --list-hosts
            
            1 ansible-doc 使用（了解ansible module ）
                1.1 ansible-doc -l 查看所有模块名称 
                1.2 ansible-doc -s ping 只查看ping模块的解释。

                1.3 ansible module -> ansible.module.stu

            2.1 ansible 的使用：
               （命令行使用的简单例子）
                ansible命令格式： ansible <host-pattern> [options]
                常用的简单ansible命令行demo：
                    2.1.1 查看是否能ping通全部主机
                    ansible all -m ping -u root
                    2.1.2 拷贝文件/etc/host 到远程主机（web组）的位置是/tmp/hosts
                    ansible web -m copy -a "src=/etc/hosts" dest=/tmp/hosts
                    2.1.3 安装包 远程主机web从yum安装包acme
                    ansible web -m yum -a "name=acme  state=present"
                    2.1.4 添加用户
                    ansible all -m user -a "name = foo password=<crypted password here>"
                    2.1.5 拉取git仓库
                    ansible web -m git -a "repo=git://foo.example.org/repo.git dest=/srv/myapp version-HEAD"
                    2.1.6 启动服务
                    ansible web -m service -a "name=httpd state=started"
                    2.1.7  查看远程主机的全部系统信息
                    ansible all -m setup
                
                （脚本使用的简单例子）
                  2.2 ansible使用脚本来管理主机
                    2.2.1 执行脚本playbook的方法
                        ansible-playbook 的deploy.yml
                    2.2.2 demo 部署apache服务：
                        1.安装apache包
                        2.拷贝配置文件httpd，并保证拷贝后，服务成功被重启。
                        3.拷贝默认的网页文件index.html
                        4.启动apache服务
------------------------------------------------------------------------------------------
deploy.yml
    hosts :为主机的组
    remote_user：以哪个用户身份执行
    vars：变量

    tasks：playbook的核心，定义顺序执行的动作。
    handers：是playbook的event，
             默认不会执行，在action里触发才会执行，多次触发只执行一次。


    ---
- hosts: web
  vars:
    http_port: 80
    max_clients: 200
  remote_user: root
  tasks:
  - name: ensure apache is at the latest version
    yum: pkg=httpd state=latest

  - name: Write the configuration file
    template: src=templates/httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf
    notify:
    - restart apache

  - name: Write the default index.html file
    template: src=templates/index.html.j2 dest=/var/www/html/index.html

  - name: ensure apache is running
    service: name=httpd state=started
  handlers:
    - name: restart apache
      service: name=httpd state=restarted

-------------------------------------------------------------------------------------------
                2.2.3 ansible playbooks
                ansible playbooks是一个yaml文件，由多个plays组成。
                --本质上是一个plays的列表

                    plays是什么？
                plays的内容被成为tasks，一个tasks对应一个ansible模块的调用。
                --简单的剧本就只有一个play
                ----------------------------------
                first.yaml
                -host：xxx
                 vars：
                    xx：xx
                    xx：xx
                 remote_user:xx 
                 tasks：
                 -name：xx
                 yum（模块）：xx
                 -name：xx 
                 template（模块）：xx
                 notify： xx 
                 -name：xx 
                 service（模块）：xx
                 handlers：
                    -name：xx
                    service： xx
                -------------------------------------
               结合：https://github.com/ansible/ansible-examples/ 看，ansible腳本並沒有什麼複雜的東西。
               規則：   
                    1.每一個task都有name，
                    2.task的執行是冪等的。
                    3.    notify：通知handlers執行，
                        handlers：只重啓一次，一般就是用來做重啓服務。
                
                2.2.4 ansible roles和Include語句
                    如何將ansible 的playbooks，写成几个更加方便修改的脚本，而不是一个大的脚本呢？
                    就是有些b觉得ansible应该模块话，约定大于配置：
        -------------------------------------------------------------------------
                        ansible项目的结构：
                            site.yml
                            webservers.yml
                            fooservers.yml
                        roles/
                            common/
                                files/
                                template/
                                tasks/
                                handlers/
                                vars/
                                default/
                                meta/
                        webservers/
                                files/
                                templates/
                                tasks/
                                handlers/
                                vars/
                                default/
                                meta/
                    
                        怎么玩？
                         1.如果有 roles/x/tasks/main.yml文件，其中列出的tasks将被加入到play中
                         2.如果有 roles/x/handlers/main.yml存在，其中列出的handlers将被添加到play
                         3.如果有 roles/x/vars/main.yml存在，其中列出的variables 将被添加到play中
                         4.如果有 roles/x/meta/main.yml存在，其中列出的"角色依赖"将被添加到roles列表中
                         5.所有copy tasks 可以引用roles/x/files/中的文件，不需要指明文件路径。
                         6.所有script tasks 可以引用roles/x/files中的脚本，不需要指明文件的路径。
                         7.所有template tasks 可以引用roles/x/templates/中的文件，不需要指明文件路径。
                         8.所有include tasks可以应用roles/x/tasks/中的文件，不需要指明文件的路径

                2.2.4.2 怎么写ansible roles？？？？？
                                              
            ---------------------------------------------------------------------






























                ----------------------------------

                    





        3.ansible基本配置（17：20）
            3.1 配置文件：
                  3.1.1 全局配置   /etc/ansible/ansible.cfg
                  3.1.2 inventory 配置   /etc/ansible/host --主机清单文件
                  3.1.3 ansible 模块路径  /usr/share/my_modules/
                  3.1.4 ansible 远程主机/管理节点脚本临时存放目录    ~/.ansible/tmp
                  3.1.5 ansible role存放路径    /etc/ansible/roles
                  3.1.6 log  /var/log/ansible.log
            
            3.2  /etc/ansible/ansible.cfg


